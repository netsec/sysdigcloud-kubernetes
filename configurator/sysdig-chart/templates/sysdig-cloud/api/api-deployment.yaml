---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  namespace: {{ .Values.namespace }}
  name: sysdigcloud-api
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: sysdigcloud
        role: api
      annotations:
        version: {{ .Values.sysdig.monitorVersion | quote }}
    spec:
      affinity:
        podAntiAffinity:
          ## Strive to spread the pods across multiple AZs
          {{- if (.Values.cloudProvider.isMultiAZ | default false) }}
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - sysdigcloud
                    - key: role
                      operator: In
                      values:
                        - api
                topologyKey: failure-domain.beta.kubernetes.io/zone
          {{ end }}
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - sysdigcloud
                    - key: role
                      operator: In
                      values:
                        - api
                topologyKey: kubernetes.io/hostname
      containers:
        - name: email-renderer
          image: {{ .Values.airgapped_registry_name | default "quay.io" }}/sysdig/sysdigcloud-backend:{{ .Values.sysdig.monitorVersion }}-email-renderer
        - name: nginx
          image: {{ .Values.airgapped_registry_name | default "quay.io" }}/sysdig/sysdigcloud-backend:{{ .Values.sysdig.monitorVersion }}-nginx
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: ssl
              mountPath: /opt/certs/
            - name: config
              mountPath: /opt/kubernets_config
          env:
            - name: LOG_ROLE
              value: api
            - name: API_ENDPOINT
              valueFrom:
                configMapKeyRef:
                  name: sysdigcloud-config
                  key: api.url
        - name: api
          imagePullPolicy: IfNotPresent
          image: {{ .Values.airgapped_registry_name | default "quay.io" }}/sysdig/sysdigcloud-backend:{{ .Values.sysdig.monitorVersion }}-allinone-java
          volumeMounts:
            - name: logs
              mountPath: /var/log/sysdigcloud
            - name: config
              mountPath: /opt/kubernets_config
            - name: elasticsearch-certs
              mountPath: /opt/kubernets_secrets/elasticsearch_certs
            ## Uncomment this if you need to import self-signed SSL certs
            #- name: java-certs
            #  mountPath: /opt/java-certs/
            ## Uncomment this if you want to split sysdgicloud configurations into configs and secrets.
            #- name: secrets
            #  mountPath: /opt/kubernets_secrets
          env:
            - name: ROLES
              value: api
            - name: LOG_ROLE
              value: api
            - name: LOG_TO_STDOUT
              valueFrom:
                configMapKeyRef:
                  name: sysdigcloud-config
                  key: sysdigcloud.logging.stdout
            - name: JVM_EXTRA_OPTS
              valueFrom:
                configMapKeyRef:
                  name: sysdigcloud-config
                  key: sysdigcloud.jvm.api.options
            - name: CASSANDRA_ENDPOINT_SNITCH
              valueFrom:
                configMapKeyRef:
                  name: sysdigcloud-config
                  key: cassandra.endpoint.snitch
            - name: CASSANDRA_DC
              valueFrom:
                configMapKeyRef:
                  name: sysdigcloud-config
                  key: cassandra.datacenter.name
            - name: ES_HOSTNAME
              valueFrom:
                configMapKeyRef:
                  name: sysdigcloud-config
                  key: elasticsearch.hostname
            - name: ES_SEARCHGUARD_USER
              valueFrom:
                configMapKeyRef:
                  name: sysdigcloud-config
                  key: elasticsearch.user
            - name: ES_SEARCHGUARD_ENABLED
              valueFrom:
                configMapKeyRef:
                  name: sysdigcloud-config
                  key: elasticsearch.searchguard.enabled
            - name: ES_SEARCHGUARD_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: elasticsearch-searchguard
                  key: SG_PASSWORD
          # If you're running multiple replicas, it is advisable to configure the limits below. Limiting resources
          # can help stabilize rolling updates later down the road.
          # resources:
          #   # minimum resources for container
          #   requests:
          #     memory: "13G"
          #     cpu: "4"
          #   # maximum resources for container
          #   limits:
          #     memory: "64G"
          #     cpu: "32"
          readinessProbe:
            httpGet:
              path: /api/ping
              port: 9000
            initialDelaySeconds: 30
            timeoutSeconds: 2
          lifecycle:
            preStop:
              exec:
                command: ["curl","-v","http://127.0.0.1:9000/api/admin/drain"]
      terminationGracePeriodSeconds: 60
      imagePullSecrets:
        - name: sysdigcloud-pull-secret
      volumes:
        - name: logs
        - name: config
          configMap:
            name: sysdigcloud-config
        - name: ssl
          secret:
            secretName: sysdigcloud-ssl-secret
        - name: elasticsearch-certs
          secret:
            secretName: ca-certs
        ## Uncomment this if you need to import self-signed SSL certs
        #- name: java-certs
        #  secret:
        #    secretName: sysdigcloud-java-certs
        ## Uncomment this if you want to split sysdgicloud configurations into configs and secrets.
        #- name: secrets
        #  secret:
        #    secretName: <secret_name>
