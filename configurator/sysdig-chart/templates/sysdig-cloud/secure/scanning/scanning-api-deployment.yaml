apiVersion: apps/v1
kind: Deployment
metadata:
  name: sysdigcloud-scanning-api
  namespace: {{ .Values.namespace }}
  labels:
    affinity: sysdigcloud-scanning-api
    app: sysdigcloud
    role: scanning-api
  annotations:
    version: {{ .Values.sysdig.monitorVersion | quote }}
spec:
  # Replicas can be scaled up as needed.
  replicas: 1
  selector:
    matchLabels:
      app: sysdigcloud
      role: scanning-api
  template:
    metadata:
      labels:
        app: sysdigcloud
        role: scanning-api
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/path: '/metrics'
        prometheus.io/port: '80'
    spec:
      affinity:
        podAntiAffinity:
          ## Strive to spread the pods across multiple AZs
          {{- if (.Values.cloudProvider.isMultiAZ | default false) }}
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: affinity
                      operator: In
                      values:
                        - sysdigcloud-scanning-api
                topologyKey: failure-domain.beta.kubernetes.io/zone
          {{- end }}
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: affinity
                      operator: In
                      values:
                        - sysdigcloud-scanning-api
                topologyKey: kubernetes.io/hostname
      imagePullSecrets:
        - name: sysdigcloud-pull-secret
      containers:
        - name: scanning-api
          image: {{ .Values.airgapped_registry_name | default "quay.io" }}/sysdig/scanning:{{ .Values.sysdig.monitorVersion }}
          imagePullPolicy: IfNotPresent
          resources:
            {}
          env:
          - name: ANCHORE_ADMIN_USER
            valueFrom:
              configMapKeyRef:
                name: sysdigcloud-config
                key: anchore.admin.user
          - name: ANCHORE_ADMIN_PASSWORD
            valueFrom:
              secretKeyRef:
                name: sysdigcloud-anchore
                key: anchore.admin.password
          - name: ANCHORE_DB_ENDPOINT
            valueFrom:
              configMapKeyRef:
                name: sysdigcloud-config
                key: anchore.db.endpoint
          - name: ANCHORE_DB_NAME
            valueFrom:
              configMapKeyRef:
                name: sysdigcloud-config
                key: anchore.db.dbname
          - name: ANCHORE_DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: sysdigcloud-anchore
                key: anchore.db.password
          - name: ANCHORE_DB_USER
            valueFrom:
              configMapKeyRef:
                name: sysdigcloud-config
                key: anchore.db.user
          - name: ANCHORE_URL
            valueFrom:
              configMapKeyRef:
                name: sysdigcloud-config
                key: anchore.url
          - name: BACKEND_SERVICE_TOKEN
            valueFrom:
              configMapKeyRef:
                name: sysdigcloud-config
                key: scanning.service.token
          - name: BACKEND_TLS_CHECK_CERTIFICATE
            valueFrom:
              configMapKeyRef:
                name: sysdigcloud-config
                key: scanning.backend.tlsCheck
          - name: BACKEND_URL
            valueFrom:
              configMapKeyRef:
                name: sysdigcloud-config
                key: scanning.backend.url
          - name: DB_ENDPOINT
            valueFrom:
              configMapKeyRef:
                name: sysdigcloud-config
                key: scanning.mysql.endpoint
          - name: DB_NAME
            valueFrom:
              configMapKeyRef:
                name: sysdigcloud-config
                key: scanning.mysql.dbname
          - name: DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: sysdigcloud-scanning
                key: scanning.mysql.password
          - name: DB_USER
            valueFrom:
              configMapKeyRef:
                name: sysdigcloud-config
                key: scanning.mysql.user
          - name: REDIS_ENABLED
            valueFrom:
              configMapKeyRef:
                name: sysdigcloud-config
                key: scanning.redis.enabled
          - name: REDIS_ENDPOINT
            valueFrom:
              configMapKeyRef:
                name: sysdigcloud-config
                key: redis.endpoint
          - name: REDIS_PASSWORD
            valueFrom:
              configMapKeyRef:
                name: sysdigcloud-config
                key: redis.password
